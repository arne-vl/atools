{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>atools is a collection of handy command-line interface(CLI) tools built using Go and cobra-cli.</p>"},{"location":"#quick-installation","title":"Quick Installation","text":""},{"location":"#linux","title":"Linux","text":"<pre><code>curl -fsSL https://atools.arnevanlooveren.be/installers/linux.sh | sh\n</code></pre>"},{"location":"#macos","title":"MacOS","text":"<p>A dedicated MacOS installer is not available yet.</p> <p>Please use the manual installation method or build from source.</p>"},{"location":"#windows","title":"Windows","text":"<p>A dedicated Windows installer is not available yet.</p> <p>Please use the manual installation method or build from source.</p>"},{"location":"#manual-installation","title":"Manual Installation","text":""},{"location":"#linux_1","title":"Linux","text":"<ol> <li>Download the latest release from the releases page.</li> <li>Unzip the downloaded file:     <pre><code>tar -xzf atools_*_linux_*.tar.gz\n</code></pre></li> <li>Copy the <code>atools</code> binary to <code>/usr/bin</code> <pre><code>sudo cp atools /usr/bin\n</code></pre></li> <li>Make the binary executable:     <pre><code>sudo chmod +x /usr/bin/atools\n</code></pre></li> <li>Verify the installation:     <pre><code>atools version\n</code></pre> (Or simply run <code>atools</code> to see the available commands.)</li> </ol>"},{"location":"#macos_1","title":"MacOS","text":"<ol> <li>Download the latest release from the releases page.</li> <li>Unzip the downloaded file:     <pre><code>tar -xzf atools_*_darwin_*.tar.gz\n</code></pre></li> <li>Copy the <code>atools</code> binary to <code>/usr/local/bin</code> <pre><code>sudo cp atools /usr/local/bin\n</code></pre></li> <li>Make the binary executable:     <pre><code>sudo chmod +x /usr/local/bin/atools\n</code></pre></li> <li>Verify the installation:     <pre><code>atools version\n</code></pre> (Or simply run <code>atools</code> to see the available commands.)</li> </ol>"},{"location":"#windows_1","title":"Windows","text":"<ol> <li>Download the latest release from the releases page.</li> <li>Unzip the downloaded file.</li> <li>Copy the <code>atools.exe</code> binary to <code>C:\\Program Files\\atools</code> or any other directory in your PATH.</li> <li>Open Command Prompt or Powershell and verify the installation with <code>atools version</code>.</li> </ol>"},{"location":"#source-build","title":"Source Build","text":"<ol> <li>Clone the repository:     <pre><code>git clone https://github.com/arne-vl/atools.git\n</code></pre></li> <li>Navigate, build, and install:     <pre><code>cd atools\ngo mod tidy\ngo build\ngo install\n</code></pre></li> <li>Verify the installation:     <pre><code>atools version\n</code></pre></li> </ol>"},{"location":"blueprints/","title":"Blueprints","text":"<p>Blueprints are a way of defining reusable directory and file structures. They can be used to create consistent setups for projects, applications, or any other purpose.</p>"},{"location":"blueprints/#blueprint-files","title":"Blueprint Files","text":"<p>Blueprints are defined in YAML files. (both <code>.yaml</code> and <code>.yml</code> are supported).</p> <p>Blueprints are created at <code>~/.config/atools/blueprints</code>.</p> <p>Make sure to give your blueprint file a unique, easy-to-remember name. This name will be used to reference the blueprint.</p>"},{"location":"blueprints/#variables","title":"Variables","text":""},{"location":"blueprints/#custom-variables","title":"Custom Variables","text":"<p>Blueprints can contain variables that can be replaced with actual values when the blueprint is used. Variables are defined in the format <code>{{ variable_name }}</code>.</p>"},{"location":"blueprints/#predefined-variables","title":"Predefined Variables","text":"<p>Predefined variables are automatically replaced with their values when the blueprint is used.</p> <ul> <li><code>{{ year }}</code> - the current year.</li> <li><code>{{ quarter }}</code> - the quarter of the year we are in (e.g. Q1).</li> <li><code>{{ month }}</code> - the current month.</li> <li><code>{{ monthnumber }}</code> - the number of the current month.</li> <li><code>{{ weeknumber }}</code> - the number of the current week.</li> <li><code>{{ day }}</code> - the current day.</li> <li><code>{{ daynumber }}</code> - the number of the current date.</li> <li><code>{{ hour }}</code> - the current hour.</li> <li><code>{{ minute }}</code> - the current minute.</li> </ul>"},{"location":"blueprints/#example","title":"Example","text":"<pre><code>blueprint:\n    directories:\n        - 'test'\n        - '{{ year }}-{{ monthnumber }}-{{ daynumber }}-test'\n    files:\n        - path: 'test/test.txt'\n        - path: '{{ year }}-{{ monthnumber }}-{{ daynumber }}-test/test.md'\n          content: |\n            # This is a test file\n            This file was created on {{ year }}-{{ monthnumber }}-{{ daynumber }}\n</code></pre>"},{"location":"commands/","title":"Commands","text":"<ul> <li><code>atools version</code> - Print the current version of atools.</li> <li><code>atools completion</code> - Generate the autocompletion script for the specified shell.</li> <li><code>atools linecounter</code> - Count the number of lines in files with a specific extension.</li> <li><code>atools portcheck</code> - Checks if a port is occupied or free on the local machine.</li> <li><code>atools ipinfo</code> - Display the IP info of the current machine.</li> <li><code>atools jsonfmt</code> - Pretty print JSON.</li> <li><code>atools construct</code> - Construct your atools blueprints.</li> </ul>"},{"location":"commands/#version","title":"Version","text":"<p>Prints the current installed version of atools.</p> <p>Usage: <pre><code>atools version\n</code></pre></p> <p>Example Output: <pre><code>atools version 0.1.0\n</code></pre></p>"},{"location":"commands/#completion","title":"Completion","text":"<p>Generate the autocompletion script for the specified shell.</p> <p>Usage: <pre><code>atools completion &lt;shell&gt;\n</code></pre> Supported Shells:</p> <ul> <li><code>bash</code></li> <li><code>zsh</code></li> <li><code>fish</code></li> <li><code>powershell</code></li> </ul>"},{"location":"commands/#linecounter","title":"Linecounter","text":"<p>Count the number of lines in files with a specific extension.</p> <p>Usage: <pre><code>atools linecounter &lt;extension&gt; [flags]\n</code></pre></p> <p>The extension is required and can be provided without the dot (e.g., <code>txt</code> for <code>.txt</code> files).</p> <p>Flags:</p> <ul> <li><code>-h</code>, <code>--help</code>              Help for linecounter.</li> <li><code>-d</code>, <code>--directory</code> string  The directory to scan. Default is the current directory.</li> <li><code>-r</code>, <code>--recursive</code>         Enable recursive search in subdirectories.</li> <li><code>-l</code>, <code>--list</code>              List all scanned files with their line count (high to low).</li> <li><code>-s</code>, <code>--spread</code>            Show the amount of files scanned.</li> </ul>"},{"location":"commands/#portcheck","title":"Portcheck","text":"<p>Check if a port is occupied or free on the local machine.</p> <p>Usage: <pre><code>atools portcheck &lt;port&gt;\n</code></pre></p>"},{"location":"commands/#ipinfo","title":"Ipinfo","text":"<p>Display the IP info of the current machine.</p> <p>Usage: <pre><code>atools ipinfo\n</code></pre></p> <p>Example Output: <pre><code>Hostname:   my-computer\nPrivate IP: 192.168.1.100\nPublic IP:  203.0.113.5\n</code></pre></p>"},{"location":"commands/#jsonfmt","title":"Jsonfmt","text":"<p>Pretty print JSON.</p> <p>Usage: <pre><code>atools jsonfmt &lt;json-file&gt; [flags]\n</code></pre> Or use it in a pipe: <pre><code>cat file.json | atools jsonfmt\n</code></pre></p> <p>Flags:</p> <ul> <li><code>-h</code>, <code>--help</code>     Help for jsonfmt.</li> <li><code>-c</code>, <code>--compact</code>  Compact JSON output.</li> </ul>"},{"location":"commands/#construct","title":"Construct","text":"<p>Construct your atools blueprints.</p> <p>Usage: <pre><code>atools construct &lt;blueprint-name&gt; [flags]\n</code></pre></p> <p>See how to create a blueprint here.</p> <p>To call your blueprints, you can also use the name of the file without the extension (e.g., <code>my-blueprint</code> for <code>my-blueprint.yaml</code>).</p> <p>Flags:</p> <ul> <li><code>-h</code>, <code>--help</code>    Help for construct.</li> <li><code>-s</code>, <code>--silent</code>  Silent mode (no output).</li> </ul>"}]}